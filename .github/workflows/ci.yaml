name: ci
on:
  push:
    branches:
      - main
jobs:
#  validate:
#    runs-on: ubuntu-latest
#    env:
#      PRE_COMMIT_HOME: "$GITHUB_WORKSPACE/.cache/pre-commit"
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#        with:
#          python-version: "3.9.7"
#      - uses: actions/cache@v2
#        with:
#          path: $PRE_COMMIT_HOME
#          key: pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
#          restore-keys: ${{ runner.os }}-pre-commit
#      - run: python -m pip install pre-commit
#      - run: pre-commit install
#      - run: pre-commit run --all-files
  test:
    # needs: validate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Set pythonpath
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
      - name: Test
        run: poetry run pytest --cov=pydantic-factories
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.9-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Set pythonpath
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
      - name: Test
        run: poetry run pytest --cov=pydantic-factories --cov-report=xml
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
